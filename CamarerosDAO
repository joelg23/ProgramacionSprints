package asix1.pkg1.m03;

import java.io.*;
import java.util.ArrayList;

/**
 *
 * @author Ricardo y Joel
 */
public class CamarerosDAO {

    public static String FICHERO = "C:\\Users\\alumne\\Desktop\\Camareros.dat";
     
 public void insertarCamareroNuevo(Camarero camarero) {

        if (!existeCamarero(camarero.nombreU)) {

            Camarero[] camareros = new Camarero[100];

            //Lectura
            try {
                ObjectInputStream fichero = new ObjectInputStream(new FileInputStream(FICHERO));

                camareros = (Camarero[]) fichero.readObject();

            } catch (Exception ex) {
                System.out.println("Error al leer fichero");
            }

            //Escribir
            try {
                // A partir de aquí accederemos al fichero a guardar mediante la variable fichero
                ObjectOutputStream fichero = new ObjectOutputStream(new FileOutputStream(FICHERO));

                for (int i = 0; i < camareros.length; i++) {
                    if (camareros[i] == null) {
                        camareros[i] = new Camarero();
                        camareros[i].nombreU = camarero.getNombreU();
                        camareros[i].nombre = camarero.getNombre();
                        camareros[i].apellidos = camarero.getApellidos();
                        camareros[i].salario = camarero.getSalario();
                        camareros[i].contraseña = camarero.getContraseña();
                        camareros[i].rango = "camarero";
                        i = camareros.length;
                    }
                }

                // Con writeObject escribimos directamente todo el array de Empleados
                fichero.writeObject(camareros);

                // Cerramos el fichero
                fichero.close();

            } catch (Exception e) {
                System.out.println("Ha ocurrido un error al guardar el fichero");
            }
        } else {
            System.out.println("Ya existe el usuario. Introduzca uno nuevo.");
        }
    }
    
    public void listarCamareros() {//Lista los camareros
        
        //Lectura
        try {
            // Accedemos al fichero a leer mediante la variable fichero
            ObjectInputStream fichero = new ObjectInputStream(new FileInputStream(FICHERO));
            
            
            // Creamos un nuevo array de Camareros
            // Y rellenamos con lo recuperado de leer el fichero mediante readObject
            // readObject recibe todo un array de Camareros y por eso lo casteamos (Camarero[])

            Camarero[] camareros_leer = (Camarero[]) fichero.readObject();
 
            // Recorremos todo el array de Camareros     
            for (Camarero e : camareros_leer) {
                if (e != null) {
                    System.out.println(e.toString());
                }
            }
            
            // Cerramos el fichero
            fichero.close();

        } catch (Exception e) {
            System.out.println("Ha ocurrido un error al leer el fichero");
        }

    }
    
        
    public void eliminarCamarero(String nombre) {//Elimina el camarero con nombre de usuario pedido
            Camarero[] camareros = new Camarero[100];
        
        //Lectura
        try {
            ObjectInputStream fichero = new ObjectInputStream(new FileInputStream(FICHERO));
            
            camareros =  (Camarero[]) fichero.readObject();
            
        }catch (Exception ex) {
            System.out.println("Error al leer fichero");
        }
        
        //Escritura
        try {
           ObjectOutputStream fichero = new ObjectOutputStream(new FileOutputStream(FICHERO));
            String[] split = new String[7];

            for (Camarero linea : camareros) {
                if (!nombre.equals(linea)) {
                    fichero.writeObject(linea+"\n");
                }
            }
            fichero.close();

        } catch (Exception e) {
            System.out.println("Ha ocurrido un error al abrir/sobreescribir el fichero");
        }
    }
    
    public void modificarCamarero(String nombre) {
         Camarero[] camareros = new Camarero[100];
        Camarero camareroModificado = new Camarero();
        
        //Lectura
        try {
            ObjectInputStream fichero = new ObjectInputStream(new FileInputStream(FICHERO));
            
            Camarero[] camareros_leer = (Camarero[]) fichero.readObject();
            
            
        }catch (Exception ex) {
            System.out.println("Error al leer fichero");
        }
        
        //Escritura
        try {
           ObjectOutputStream fichero = new ObjectOutputStream(new FileOutputStream(FICHERO));
            camareroModificado.pedirDatosC();
            for (Camarero linea : camareros) {
                if (!nombre.equals(linea)) {
                    fichero.writeObject(camareroModificado+"\n");
                }
            }
            fichero.close();

        } catch (Exception e) {
            System.out.println("Ha ocurrido un error al abrir/sobreescribir el fichero");
        }

    }
        
       public boolean existeCamarero(String usuario)  {//Detecta si existe o no el camarero
        boolean existe = false;
        
        try {
            ObjectInputStream fichero = new ObjectInputStream(new FileInputStream(FICHERO));
            
            Camarero[] camareros_leer = (Camarero[]) fichero.readObject();
 
            // Recorremos todo el array de Camareros     
            for (Camarero e : camareros_leer){
                if (e != null && e.nombreU.equals(usuario)){
                    existe = true; 
                }
            }
        }catch (Exception ex) {
            System.out.println("Error al leer fichero");
        }
                
        return existe;
    }
}
